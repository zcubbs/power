// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.17.3
// source: v1/blueprint_service.proto

package power

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BlueprintServiceClient is the client API for BlueprintService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BlueprintServiceClient interface {
	Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*PingResponse, error)
	GenerateProject(ctx context.Context, in *GenerateProjectRequest, opts ...grpc.CallOption) (*GenerateProjectResponse, error)
	GetBlueprints(ctx context.Context, in *GetBlueprintListRequest, opts ...grpc.CallOption) (*GetBlueprintListResponse, error)
	GetBucketObjects(ctx context.Context, in *GetBucketObjectListRequest, opts ...grpc.CallOption) (*GetBucketObjectListResponse, error)
}

type blueprintServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBlueprintServiceClient(cc grpc.ClientConnInterface) BlueprintServiceClient {
	return &blueprintServiceClient{cc}
}

func (c *blueprintServiceClient) Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/pb.v1.BlueprintService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blueprintServiceClient) GenerateProject(ctx context.Context, in *GenerateProjectRequest, opts ...grpc.CallOption) (*GenerateProjectResponse, error) {
	out := new(GenerateProjectResponse)
	err := c.cc.Invoke(ctx, "/pb.v1.BlueprintService/GenerateProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blueprintServiceClient) GetBlueprints(ctx context.Context, in *GetBlueprintListRequest, opts ...grpc.CallOption) (*GetBlueprintListResponse, error) {
	out := new(GetBlueprintListResponse)
	err := c.cc.Invoke(ctx, "/pb.v1.BlueprintService/GetBlueprints", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blueprintServiceClient) GetBucketObjects(ctx context.Context, in *GetBucketObjectListRequest, opts ...grpc.CallOption) (*GetBucketObjectListResponse, error) {
	out := new(GetBucketObjectListResponse)
	err := c.cc.Invoke(ctx, "/pb.v1.BlueprintService/GetBucketObjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlueprintServiceServer is the server API for BlueprintService service.
// All implementations must embed UnimplementedBlueprintServiceServer
// for forward compatibility
type BlueprintServiceServer interface {
	Ping(context.Context, *Empty) (*PingResponse, error)
	GenerateProject(context.Context, *GenerateProjectRequest) (*GenerateProjectResponse, error)
	GetBlueprints(context.Context, *GetBlueprintListRequest) (*GetBlueprintListResponse, error)
	GetBucketObjects(context.Context, *GetBucketObjectListRequest) (*GetBucketObjectListResponse, error)
	mustEmbedUnimplementedBlueprintServiceServer()
}

// UnimplementedBlueprintServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBlueprintServiceServer struct {
}

func (UnimplementedBlueprintServiceServer) Ping(context.Context, *Empty) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (UnimplementedBlueprintServiceServer) GenerateProject(context.Context, *GenerateProjectRequest) (*GenerateProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateProject not implemented")
}
func (UnimplementedBlueprintServiceServer) GetBlueprints(context.Context, *GetBlueprintListRequest) (*GetBlueprintListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlueprints not implemented")
}
func (UnimplementedBlueprintServiceServer) GetBucketObjects(context.Context, *GetBucketObjectListRequest) (*GetBucketObjectListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBucketObjects not implemented")
}
func (UnimplementedBlueprintServiceServer) mustEmbedUnimplementedBlueprintServiceServer() {}

// UnsafeBlueprintServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BlueprintServiceServer will
// result in compilation errors.
type UnsafeBlueprintServiceServer interface {
	mustEmbedUnimplementedBlueprintServiceServer()
}

func RegisterBlueprintServiceServer(s grpc.ServiceRegistrar, srv BlueprintServiceServer) {
	s.RegisterService(&BlueprintService_ServiceDesc, srv)
}

func _BlueprintService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlueprintServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.v1.BlueprintService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlueprintServiceServer).Ping(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlueprintService_GenerateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlueprintServiceServer).GenerateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.v1.BlueprintService/GenerateProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlueprintServiceServer).GenerateProject(ctx, req.(*GenerateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlueprintService_GetBlueprints_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlueprintListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlueprintServiceServer).GetBlueprints(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.v1.BlueprintService/GetBlueprints",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlueprintServiceServer).GetBlueprints(ctx, req.(*GetBlueprintListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlueprintService_GetBucketObjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBucketObjectListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlueprintServiceServer).GetBucketObjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.v1.BlueprintService/GetBucketObjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlueprintServiceServer).GetBucketObjects(ctx, req.(*GetBucketObjectListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BlueprintService_ServiceDesc is the grpc.ServiceDesc for BlueprintService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BlueprintService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.v1.BlueprintService",
	HandlerType: (*BlueprintServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _BlueprintService_Ping_Handler,
		},
		{
			MethodName: "GenerateProject",
			Handler:    _BlueprintService_GenerateProject_Handler,
		},
		{
			MethodName: "GetBlueprints",
			Handler:    _BlueprintService_GetBlueprints_Handler,
		},
		{
			MethodName: "GetBucketObjects",
			Handler:    _BlueprintService_GetBucketObjects_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/blueprint_service.proto",
}
